---
import seasonOne from "./data/episodes";

const { storyNumber = 1 } = Astro.props;

const storyNode = seasonOne[storyNumber - 1];

class EpisodeTile {
  constructor(data, i) {
    this.title = `Episode ${i + 1} - ${data[i].storyTitle}`;
    this.image = `https://img.youtube.com/vi/${data[i].videoLink}/hqdefault.jpg`;
    this.active = false;
  } 
}
const episodes = [];

for(let i = 0; i < seasonOne.length; i++) {
  episodes[i] = new EpisodeTile(seasonOne, i);
}
---


<section class="other-episodes">
  <img class="story-nodes-icon" src="/public/governanceHubAssets/episodesPCOpen.png" />
  <div class="story-nodes-container">
    <div class="story-nodes-legend">Dischordian Saga</div>
    <div class="story-nodes">
      {episodes.map((episode) => (
        <div class="story-node-tile">
          <img class="story-node-image" src={episode.image} />
          <p class="story-node-title">{episode.title}</p>
        </div>
      ))}
    </div>
  </div>
</section>


<script>
  import { episodesPanel, otherEpisodesIcon } from "./data/panels";

  otherEpisodesIcon.addEventListener('click', () => {
    if(episodesPanel.panelState) {
      episodesPanel.close();
    } else {
      episodesPanel.open();
    }
  })
</script>


<style>
  .story-nodes-icon {
    position: fixed;
    z-index: 19;
    top: 0;
    left: 0;
    height: auto;
    width: 20vw;
    filter: drop-shadow(0.1vw 0.1vw 0.5vw #010020);
    cursor: pointer;
  }

  .story-nodes-container {
    position: fixed;
    z-index: 18;
    top: 0;
    left: -44vw;
    height: 100%;
    width: 40vw;
    display: flex;
    flex-flow: column nowrap;
    background-image: url('/public/GovernanceHubAssets/sideBorder.png');
    background-size: contain;
    background-repeat: no-repeat;
    background-color: rgba(1, 0, 32, 0.5);
    background-position: right;
    -webkit-backdrop-filter: blur(1vw);
    backdrop-filter: blur(1vw);
    filter: drop-shadow(-0.1vw 0.1vw 0.5vw #010020);
    overflow-y: scroll;
    padding: 1vw 2vw;
  }

  .story-nodes-container::-webkit-scrollbar {
    width: 0px;
  }

  .story-nodes-legend {
    text-align: center;
    padding: 2vw;
    font-size: 3vw;
    color: rgba(51, 226, 230, 0.9);
    filter: drop-shadow(0 0 1vw 5vw #33E2E6);
  }

  .story-node-tile {
    width: 35vw;
    padding: 1vw;
    margin: 1vw;
    margin-bottom: 2vw;
    background-color: rgba(51, 226, 230, 0.4);
    border: 0.05vw solid #33E2E6;
    border-radius: 1.5vw;
  }

  .story-node-title {
    padding-top: 0.5vw;
    padding-bottom: 0.5vw;
    text-align: center;
    white-space: wrap;
    width: 35vw;
    font-size: 2.5vw;
    line-height: 3vw;
    text-shadow: 0 0 0.1vw #010020;
  }

  .story-node-image {
    object-fit: cover;
    border: 0.05vw solid #33E2E6;
    border-radius: 1vw;
    width: 100%;
    height: 20vw;
  }


  @media only screen and (max-width: 600px) {
    .story-nodes-icon {
      width: 31.6vw;
      filter: drop-shadow(0 0.5vw 1vw #010020);
    }

    .story-nodes-legend {
      font-size: 5vw;
      padding: 3vw;
    }

    .story-node-tile {
      width: 86vw;
      margin: 4vw;
      margin-top: 0;
    }

    .story-node-title {
      padding-left: 2.5%;
      font-size: 1.2em;
      line-height: 1.5em;
      width: 95%;
    }

    .story-node-image {
      height: 50vw;
    }

    .story-nodes-container {
      width: 100vw;
      height: 80%;
      top: -80%;
      right: auto;
      left: 0;
      background-image: none;
    }
  }
</style>